server.port=10051

# 服务名称
spring.application.name=zuulserver

# 注册中心地址，如果服务注册中心为高可用集群时，多个注册中心地址以逗号分隔。
eureka.client.service-url.defaultZone=http://localhost:10050/eureka/
# 将IP注册到Eureka Server上，而如果不配置就是机器的主机名
eureka.instance.prefer-ip-address=true

# redis
spring.redis.host=localhost
spring.redis.port=6379
spring.redis.password=123456
# 可用连接实例的最大数目，默认值为8；
# 如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.maxActive=8
# 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例，默认值也是8。
spring.redis.maxIdle=8
# 等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；
spring.redis.maxWait=10000
# 在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的；
spring.redis.testOnBorrow=true
spring.redis.testOnReturn=true
spring.redis.timeOut=3000
# redis超时时间 1*1*60*60
spring.redis.redisExpire=3600

# config
# 开启配置信息发现
spring.cloud.config.discovery.enabled=true
# 指定配置中心的service-id
spring.cloud.config.discovery.service-id=configserver
# 获取配置文件的名称
spring.cloud.config.name=zuul-client
# 获取配置文件的分支，默认是master
spring.cloud.config.label=master
# 获取配置的策略
# dev
# test
# pro
spring.cloud.config.profile=dev

# 是否启动快速失败功能，功能开启则优先判断config server是否正常，如果要求客户端访问配置中心失败，则立即停止启动服务
spring.cloud.config.fail-fast=true
# 访问配置失败，则自动重试
# 最多重试次数
spring.cloud.config.retry.max-attempts=6
# 第一次失败，延迟多久重试
spring.cloud.config.retry.initial-interval=1000
# 每次重试时间是之前的倍数
spring.cloud.config.retry.multiplier=1.1
# 最大重试间隔
spring.cloud.config.retry.max-interval=2000

# 通过HTTP发送shutdown信号
# 启用shutdown
endpoints.shutdown.enabled=true
# 禁用密码验证
endpoints.shutdown.sensitive=false

# 发送心跳的频路默认30s
eureka.instance.lease-renewal-interval-in-seconds=30
# 服务失效的时间，默认90秒
eureka.instance.lease-expiration-duration-in-seconds=90

# zuul超时配置
zuul.host.socket-timeout-millis=600000
zuul.host.connect-timeout-millis=600000


